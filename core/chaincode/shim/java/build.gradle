/*
Copyright DTCC 2016 All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

	
plugins {
	id "java"
	id "com.google.protobuf" version "0.7.6"
	id "eclipse"
	id "application"
}

mainClassName = "example.RepoChain"

run {
	if (project.hasProperty("appArgs")) {
		args = Eval.me(appArgs)
	}
}

apply plugin: "osdetector"

def tcnative_classifier = osdetector.classifier;
// Fedora variants use a different soname for OpenSSL than other linux distributions
// (see http://netty.io/wiki/forked-tomcat-native.html).
//if (osdetector.os == "linux" && osdetector.release.isLike('fedora')) {
//	tcnative_classifier += "-fedora";
//}
println osdetector.arch
println osdetector.classifier
println tcnative_classifier

println("TCNative")

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		proto {
			srcDir 'src/main/proto'
		}
	}
}

repositories {
    mavenCentral()
}

protobuf {
	generatedFilesBaseDir = "$projectDir/src"
	protoc {
		artifact = 'com.google.protobuf:protoc:3.0.0-beta-2'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:0.13.2'
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins {
				java {
					outputSubDir = 'java'
				}
			}
			task.plugins {
				grpc {
				outputSubDir = 'java'
				}
			}
		}
	}
}

dependencies {
	compile 'com.google.protobuf:protobuf-java:3.0.0-beta-2'
	compile 'io.grpc:grpc-all:0.13.2'
	compile 'commons-cli:commons-cli:1.3.1'
	compile 'org.apache.commons:commons-lang3:3.4'
}
